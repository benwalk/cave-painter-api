{
  "service": {
    "service": "cave-painter-api",
    "serviceObject": {
      "name": "cave-painter-api"
    },
    "provider": {
      "stage": "dev",
      "region": "us-west-2",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._'\",\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "environment": {
        "tableName": "dev-orders"
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "GraphqlLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cave-painter-api-dev-graphql"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "cave-painter-api",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cave-painter-api-dev-graphql:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cave-painter-api-dev-graphql:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "cave-painter-api",
                    "dev",
                    "us-west-2",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GraphqlLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cave-painter-api/dev/1548393139658-2019-01-25T05:12:19.658Z/cave-painter-api.zip"
              },
              "FunctionName": "cave-painter-api-dev-graphql",
              "Handler": "graphql/handler.graphqlHandler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "tableName": "dev-orders"
                }
              }
            },
            "DependsOn": [
              "GraphqlLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "GraphqlLambdaVersion23QpqztqXaRNA7UXHlykjQPj5N3gZtz7t0byyPwGuA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GraphqlLambdaFunction"
              },
              "CodeSha256": "7SWNjeT5FjfP/g28W43owOwpbUEdLldFcfZ4PKMk9Sk="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-cave-painter-api",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceGraphql": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "graphql",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGraphqlOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true,
                    "method.response.header.Access-Control-Allow-Credentials": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'",
                      "method.response.header.Access-Control-Allow-Credentials": "'false'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceGraphql"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGraphqlPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGraphql"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GraphqlLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodGraphqlGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGraphql"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GraphqlLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1548393139761": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodGraphqlOptions",
              "ApiGatewayMethodGraphqlPost",
              "ApiGatewayMethodGraphqlGet"
            ]
          },
          "GraphqlLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GraphqlLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": {
                "Fn::Join": [
                  "",
                  [
                    "apigateway.",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "OrdersTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "dev-orders",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              }
            }
          },
          "AttachmentsBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "CorsConfiguration": {
                "CorsRules": [
                  {
                    "AllowedOrigins": [
                      "*"
                    ],
                    "AllowedHeaders": [
                      "*"
                    ],
                    "AllowedMethods": [
                      "GET",
                      "PUT",
                      "POST",
                      "DELETE",
                      "HEAD"
                    ],
                    "MaxAge": 3000
                  }
                ]
              }
            }
          },
          "CognitoUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolName": "dev-user-pool",
              "UsernameAttributes": [
                "email"
              ],
              "AutoVerifiedAttributes": [
                "email"
              ]
            }
          },
          "CognitoUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "dev-user-pool-client",
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              },
              "ExplicitAuthFlows": [
                "ADMIN_NO_SRP_AUTH"
              ],
              "GenerateSecret": false
            }
          },
          "CognitoIdentityPool": {
            "Type": "AWS::Cognito::IdentityPool",
            "Properties": {
              "IdentityPoolName": "devIdentityPool",
              "AllowUnauthenticatedIdentities": false,
              "CognitoIdentityProviders": [
                {
                  "ClientId": {
                    "Ref": "CognitoUserPoolClient"
                  },
                  "ProviderName": {
                    "Fn::GetAtt": [
                      "CognitoUserPool",
                      "ProviderName"
                    ]
                  }
                }
              ]
            }
          },
          "CognitoIdentityPoolRoles": {
            "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
            "Properties": {
              "IdentityPoolId": {
                "Ref": "CognitoIdentityPool"
              },
              "Roles": {
                "authenticated": {
                  "Fn::GetAtt": [
                    "CognitoAuthRole",
                    "Arn"
                  ]
                }
              }
            }
          },
          "CognitoAuthRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "Path": "/",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Federated": "cognito-identity.amazonaws.com"
                    },
                    "Action": [
                      "sts:AssumeRoleWithWebIdentity"
                    ],
                    "Condition": {
                      "StringEquals": {
                        "cognito-identity.amazonaws.com:aud": {
                          "Ref": "CognitoIdentityPool"
                        }
                      },
                      "ForAnyValue:StringLike": {
                        "cognito-identity.amazonaws.com:amr": "authenticated"
                      }
                    }
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "CognitoAuthorizedPolicy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "mobileanalytics:PutEvents",
                          "cognito-sync:*",
                          "cognito-identity:*"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "execute-api:Invoke"
                        ],
                        "Resource": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:aws:execute-api:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":",
                              {
                                "Ref": "ApiGatewayRestApi"
                              },
                              "/*"
                            ]
                          ]
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:*"
                        ],
                        "Resource": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                {
                                  "Fn::GetAtt": [
                                    "AttachmentsBucket",
                                    "Arn"
                                  ]
                                },
                                "/private/",
                                "$",
                                "{cognito-identity.amazonaws.com:sub}/*"
                              ]
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "ServiceRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "DynamoRole",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "Dynamo-ServiceRole-Policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Query",
                          "dynamodb:BatchWriteItem",
                          "dynamodb:GetItem",
                          "dynamodb:DeleteItem",
                          "dynamodb:PutItem",
                          "dynamodb:Scan",
                          "dynamodb:UpdateItem"
                        ],
                        "Resource": [
                          "arn:aws:dynamodb:us-west-2:*:table/Orders",
                          "arn:aws:dynamodb:us-west-2:*:table/Orders/*"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "GraphqlLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GraphqlLambdaVersion23QpqztqXaRNA7UXHlykjQPj5N3gZtz7t0byyPwGuA"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-west-2.",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          },
          "AttachmentsBucketName": {
            "Value": {
              "Ref": "AttachmentsBucket"
            }
          },
          "UserPoolId": {
            "Value": {
              "Ref": "CognitoUserPool"
            }
          },
          "UserPoolClientId": {
            "Value": {
              "Ref": "CognitoUserPoolClient"
            }
          },
          "IdentityPoolId": {
            "Value": {
              "Ref": "CognitoIdentityPool"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "serverless-offline": {
        "port": 4000
      },
      "stage": "dev",
      "tableName": "dev-orders",
      "tableThroughputs": {
        "prod": 5,
        "default": 1
      },
      "tableThroughput": 1,
      "webpack": {
        "webpackConfig": "./webpack.config.js",
        "includeModules": true
      },
      "environment": {
        "APP_NAME": "cave-painter-dev",
        "stripeSecretKey": "STRIPE_test_SECRET_KEY",
        "RDS_HOSTNAME": "cavepainter.c4rwe9x0ldfs.us-west-2.rds.amazonaws.com",
        "RDS_USERNAME": "cavepainter",
        "RDS_PASSWORD": "cavepainter",
        "RDS_PORT": 5432,
        "coffeesTable": {
          "name": "coffees"
        },
        "ordersTable": {
          "name": "orders"
        }
      }
    },
    "plugins": [
      "serverless-webpack",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "graphql": {
        "handler": "graphql/handler.graphqlHandler",
        "events": [
          {
            "http": {
              "path": "graphql",
              "method": "post",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "graphql",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "cave-painter-api-dev-graphql",
        "package": {
          "artifact": ".serverless/cave-painter-api.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "OrdersTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "dev-orders",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        },
        "AttachmentsBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "CorsConfiguration": {
              "CorsRules": [
                {
                  "AllowedOrigins": [
                    "*"
                  ],
                  "AllowedHeaders": [
                    "*"
                  ],
                  "AllowedMethods": [
                    "GET",
                    "PUT",
                    "POST",
                    "DELETE",
                    "HEAD"
                  ],
                  "MaxAge": 3000
                }
              ]
            }
          }
        },
        "CognitoUserPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolName": "dev-user-pool",
            "UsernameAttributes": [
              "email"
            ],
            "AutoVerifiedAttributes": [
              "email"
            ]
          }
        },
        "CognitoUserPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "dev-user-pool-client",
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            },
            "ExplicitAuthFlows": [
              "ADMIN_NO_SRP_AUTH"
            ],
            "GenerateSecret": false
          }
        },
        "CognitoIdentityPool": {
          "Type": "AWS::Cognito::IdentityPool",
          "Properties": {
            "IdentityPoolName": "devIdentityPool",
            "AllowUnauthenticatedIdentities": false,
            "CognitoIdentityProviders": [
              {
                "ClientId": {
                  "Ref": "CognitoUserPoolClient"
                },
                "ProviderName": {
                  "Fn::GetAtt": [
                    "CognitoUserPool",
                    "ProviderName"
                  ]
                }
              }
            ]
          }
        },
        "CognitoIdentityPoolRoles": {
          "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
          "Properties": {
            "IdentityPoolId": {
              "Ref": "CognitoIdentityPool"
            },
            "Roles": {
              "authenticated": {
                "Fn::GetAtt": [
                  "CognitoAuthRole",
                  "Arn"
                ]
              }
            }
          }
        },
        "CognitoAuthRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "Path": "/",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Federated": "cognito-identity.amazonaws.com"
                  },
                  "Action": [
                    "sts:AssumeRoleWithWebIdentity"
                  ],
                  "Condition": {
                    "StringEquals": {
                      "cognito-identity.amazonaws.com:aud": {
                        "Ref": "CognitoIdentityPool"
                      }
                    },
                    "ForAnyValue:StringLike": {
                      "cognito-identity.amazonaws.com:amr": "authenticated"
                    }
                  }
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "CognitoAuthorizedPolicy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "mobileanalytics:PutEvents",
                        "cognito-sync:*",
                        "cognito-identity:*"
                      ],
                      "Resource": "*"
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "execute-api:Invoke"
                      ],
                      "Resource": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:*"
                      ],
                      "Resource": [
                        {
                          "Fn::Join": [
                            "",
                            [
                              {
                                "Fn::GetAtt": [
                                  "AttachmentsBucket",
                                  "Arn"
                                ]
                              },
                              "/private/",
                              "$",
                              "{cognito-identity.amazonaws.com:sub}/*"
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "ServiceRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "DynamoRole",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "Dynamo-ServiceRole-Policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:Query",
                        "dynamodb:BatchWriteItem",
                        "dynamodb:GetItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:PutItem",
                        "dynamodb:Scan",
                        "dynamodb:UpdateItem"
                      ],
                      "Resource": [
                        "arn:aws:dynamodb:us-west-2:*:table/Orders",
                        "arn:aws:dynamodb:us-west-2:*:table/Orders/*"
                      ]
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "Outputs": {
        "AttachmentsBucketName": {
          "Value": {
            "Ref": "AttachmentsBucket"
          }
        },
        "UserPoolId": {
          "Value": {
            "Ref": "CognitoUserPool"
          }
        },
        "UserPoolClientId": {
          "Value": {
            "Ref": "CognitoUserPoolClient"
          }
        },
        "IdentityPoolId": {
          "Value": {
            "Ref": "CognitoIdentityPool"
          }
        }
      }
    },
    "layers": {}
  },
  "package": {
    "artifactDirectoryName": "serverless/cave-painter-api/dev/1548393139658-2019-01-25T05:12:19.658Z",
    "artifact": ""
  }
}